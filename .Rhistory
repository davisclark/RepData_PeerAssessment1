View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(results3)
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit(0)
submit()
students3
submit()
?spread
?spread
submit()
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?select
?separate
submit()
?group_by
submit()
install.packages("lattice")
library(httr)
?o_auth
library(ROAuth)
?o_auth
?oauth_app
myapp<-oauth_app("github",key="3495861143361d5d84da",secret="374e745dc254c614b38f8192b568a79a4a87217e")
?sign_oauth1.0
?config
sig<-sign_oauth2.0("c876579bd706338a61fad92a6de72b22d7214bf4")
sig<-config(token="c876579bd706338a61fad92a6de72b22d7214bf4")
?config
?GET
?ROAuth
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","education.csv")
gdp<-read.csv("gdp.csv")
edu<-read.csv("education.csv")
dim(gdp)
dim(edu)
names(gdp)
names(edu)
str(edu)
library(dplyr)
library(tidyr)
?tidyr
library(tidyr)
install.packages(c("Formula", "Matrix", "mgcv", "mime", "rstudioapi"))
tidyr
library(tidyr)
vignette("tidyr")
vignette(tidyr)
install.packages("tidyr")
?tidy
gdp<-tblread.csv("gdp.csv")
gdp<-tbl_df(read.csv("gdp.csv",stringsAsFactors=FALSE))
edu<-tbl_df(read.csv("education.csv",stringsAsFactors=FALSE))
gdp
edu
names(gdp)
names(gdp)[2]<-"Ranking"
names(gdp)
gdp
gdp<-gdp[c(5:330),]
gdp
arrange(gdp,desc(Ranking))
str(gdp)
names(gdp)<-gsub("\\.","",names(gdp))
str(gdp)
names(gdp)<-tolower(names(gdp))
str(gdp)
gdp$ranking<-as.numeric(gdp$ranking)
str(gdp)
tail(gdp$ranking)
tail(gdp$ranking,)
tail(gdp$ranking,20)
tail(gdp$ranking,50)
tail(gdp$ranking,20)
tail(gdp$ranking,100)
tail(gdp$ranking,200)
tail(gdp$x,200)
head(gdp$x,200)
tail(gdp)
tail(gdp,50)
View(gdp)
gdp<-gdp[c(1:215),]
View(gdp)
?match
gdp$x %in% edu$CountryCode
sum(gdp$x %in% edu$CountryCode)
gdp1<-tbl_df(read.csv("gdp.csv",stringsAsFactors=FALSE))
sum(gdp1$X %in% edu$CountryCode)
gdp1$X
sum(gdp1$X %in% edu$CountryCode)
edu$CountryCode
View(edu)
sum(edu$CountryCode %in% gdp$X)
sum(edu$CountryCode %in% gdp1$X)
sum(edu$CountryCode %in% gdp1[!(gdp1$X==""),gdp1$X])
sum(edu$CountryCode %in% gdp1[!(gdp1$X=="")])
sum(edu$CountryCode %in% gdp1$X[!(gdp1$X=="")])
View(gdp1)
View(gdp1$X[!(gdp1$X=="")])
View(as.factor(gdp1$X[!(gdp1$X=="")]))
View(sort(as.factor(gdp1$X[!(gdp1$X=="")])))
x<-sort(as.factor(gdp1$X[!(gdp1$X=="")]))
y<-edu$CountryCode
y<-as.factor(edu$CountryCode)
data.frame(x,y)
table(x,y)
matrix(x,y)
cbind(x,y)
cbind(y,x)
data.frame(c(x,NA,NA,NA,NA,NA,NA),y)
View(data.frame(c(x,NA,NA,NA,NA,NA,NA),y))
x
View(data.frame(c(x[,2],NA,NA,NA,NA,NA,NA),y))
View(data.frame(c(x,c(NA,NA,NA,NA,NA,NA)),y))
View(data.frame(c(x[[2]],c(NA,NA,NA,NA,NA,NA)),y))
View(data.frame(c(x[2],c(NA,NA,NA,NA,NA,NA)),y))
View(data.frame(c(x[,2],c(NA,NA,NA,NA,NA,NA)),y))
View(data.frame(c(x[[,2]],c(NA,NA,NA,NA,NA,NA)),y))
x
x %in% y
sum(x %in% y)
merge(gdp1,edu,by.x="X",by.y="CountryCode")
View(merge(gdp1,edu,by.x="X",by.y="CountryCode"))
names(gdp1)
head(gdp1)
head(gdp1,25)
str(gdp1)
gdp2<-gdp[c(1:190),]
str(gdp2)
View(arrange(gdp2,desc(ranking)))
gdp2$x %in% edu$CountryCode
sum(gdp2$x %in% edu$CountryCode)
View(edu)
names(edu)
names(edu)<-gsub("\\.","",names(edu))
names(edu)
names(edu)<-tolower(names(edu))
names(edu)
View(edu)
high<-edu[(edu$incomegroup=="High income: OECD"),]
dim(high)
head(high)
non<-edu[(edu$incomegroup=="High income: nonOECD"),]
dim(non)
dim(high)
merge(gdp2,high,by.x="x",by.y="countrycode")
t<-merge(gdp2,high,by.x="x",by.y="countrycode")
dim(t)
str(t)
View(t)
t$x3<-gsub(" ","",t$x3)
View(t)
t$x3<-as.numeric(t$x3)
View(t)
t<-merge(gdp2,high,by.x="x",by.y="countrycode")
t$x3<-gsub(" ","",t$x3)
View(t)
t$x3<-gsub("\\,","",t$x3)
View(t)
str(t)
as.numeric(t$x3)
t$x3<-as.numeric(t$x3)
View(t)
mean(t$x3)
str(t)
mean(t$ranking)
mean(non$ranking)
t1<-merge(gdp2,non,by.x="x",by.y="countrycode")
mean(t1$ranking)
View(gdp)
View(gdp2)
test<-merge(gdp2,edu,by.x="x",by.y="countrycode")
View(test)
test<-select(test,x,ranking,x2,x3,incomegroup)
View(test)
test<-tbl_df(test)
View(test)
test<-select(test,x,ranking,incomegroup)
View(test)
names(test)[1]<-"cc"
View(test)
?split
str(test)
test$incomegroup<-as.factor(test$incomegroup)
str(test)
split(test,test$incomegroup)
?quantile
quantile(test,probs=c(.2,.4,.6,.8))
quantile(test,probs=c(0.2,0.4,0.6,0.8))
quantile(test$ranking,probs=c(0.2,0.4,0.6,0.8))
library(Hmisc)
groups<-cut2(test$ranking,g=5)
table(groups,test$incomegroup)
table(groups,test$incomegroup)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","idaho.csv")
idaho<-read.csv("idaho.csv")
dim(idaho)
library(tidyr)
library(dplyr)
idaho<-tbl_df(idaho)
idaho
?strsplit
q1<-strsplit(names(idaho),"wgtp")
head(q1)
q1[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp.csv")
gdp<-read.csv("gdp.csv")
dim(gdp)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdpnew.csv")
gdp<-read.csv("gdpnew.csv")
dim(gdp)
names(gdp)
names(gdp)<-gsub("\\.","",names(gdp))
names(gdp)<-tolower(names(gdp))
names(gdp)
str(gdp)
gdp<-read.csv("gdpnew.csv",stringsAsFactors=FALSE)
names(gdp)<-gsub("\\.","",names(gdp))
names(gdp)<-tolower(names(gdp))
str(gdp)
gdp<-gdp[c(5:330),]
str(gdp)
names(gdp)[1]<-"ranking"
str(gdp)
names(gdp)[1]<-"x"
names(gdp)[2]<-"ranking"
str(gdp)
gdp$x3<-gsub("\\,","",gdp$x3)
str(gdp)
gdp$x3<-gsub(" ","",gdp$x3)
str(gdp)
gdp$x3<-as.numeric(gdp$x3)
gdp<-read.csv("gdpnew.csv",stringsAsFactors=FALSE)
names(gdp)[2]<-"ranking"
names(gdp)<-gsub("\\.","",names(gdp))
names(gdp)<-tolower(names(gdp))
gdp<-gdp[c(5:330),]
View(gdp)
attr(gdp)
row.names(gdp)<-NULL
View(gdp)
gdp<-gdp[c(1:190),]
gdp$x3<-gsub("\\,","",gdp$x3)
gdp$x3<-gsub(" ","",gdp$x3)
View(gdp)
as.numeric(gdp$x3)
gdp$x3<-as.numeric(gdp$x3)
str(gdp)
mean(gdp$x3)
grep("^United",gdp$x2)
edu<-read.csv("education.csv",stringsAsFactors=FALSE)
t<-merge(gdp,edu,by.x="x",by.y="CountryCode")
View(t)
names(t)<-tolower(names(t))
names(t)<-gsub("\\.","",names(t))
View(t)
grep("^Fiscal year end: June",t$specialnotes)
length(grep("^Fiscal year end: June",t$specialnotes))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn<-getSymbols("AMZN",auto.assign=FALSE)
sampleTimes<-index(amzn)
head(sampleTimes)
dim(sampleTimes)
length(sampleTimes)
str(sampleTimes)
sampleTimes[(sampleTimes>="2012-01-01")&(sampleTime<="2012-12-31")]
sampleTimes[(sampleTimes>="2012-01-01")&(sampleTimes<="2012-12-31")]
length(sampleTimes[(sampleTimes>="2012-01-01")&(sampleTimes<="2012-12-31")])
library(lubridate)
?lubridate
date(2012-12-21)
date("2012-12-21")
dset<-sampleTimes[(sampleTimes>="2012-01-01")&(sampleTimes<="2012-12-31")]
format(dset,"%a %b %d")
grep("^Mon",format(dset,"%a %b %d"))
length(grep("^Mon",format(dset,"%a %b %d")))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?nlme
?BodyWeight
?panels
?points
?lpoints
?splom
?trellis.par.set
library(datasets)
data(airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
?geom_smooth
library(shiny)
install.packages("shiny")
?server.r
?server.R
install.packages("server.R")
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps', mode="wb")
devtools::install_github('rstudio/shinyapps')
?devtools
devtools::install_github('rstudio/shinyapps', local=FALSE)
devtools::install_github('rstudio/shinyapps', build_vignettes=TRUE)
install.package("spotfire")
install.package("spotfire.r")
install.package("spotfire.R")
devtools::install_github('rstudio/shinyapps')
devtools::install_github("shinyapps", "rstudio")
devtools::install_github("rstudio/shinyapps",useInternal)
devtools::install_github("rstudio/shinyapps",useInternal=TRUE)
devtools::install_github("rstudio/shinyapps",Internal=TRUE)
devtools::install_github("rstudio/shinyapps",internal=TRUE)
devtools::install_github("rstudio/shinyapps",curlSetOpt())
library(ggplot2)
diamonds<-data.frame(data=diamonds)
?write
getwd()
write(diamonds, "C:/Users/etb8dhv/Desktop/diamonds.csv")
write(diamonds, "./Users/etb8dhv/Desktop/diamonds.csv", sep=",")
write.csv(diamonds, "./Users/etb8dhv/Desktop/diamonds.csv")
?data
?datasets
library(help="datasets")
occupation <- data.frame(data=occupationalStatus)
occupation <- data.frame(data=esoph)
occupation <- data.frame(data=occupationalStatus)
cancer <- data.frame(data=esoph)
berkeley <- data.frame(data=UCBAdmissions)
titanic<-data.frame(data=Titanic)
?ggplot2
imdb<-data.frame(data=movies)
write.csv(imdb, "./Users/etb8dhv/Desktop/imdb.csv")
write.csv(berkeley, "./Users/etb8dhv/Desktop/berkeley.csv")
write.csv(cancer, "./Users/etb8dhv/Desktop/cancer.csv")
write.csv(titanic, "./Users/etb8dhv/Desktop/titanic.csv")
write.csv(occupation, "./Users/etb8dhv/Desktop/occupation.csv")
View(diamonds)
names(diamonds)<-gsub("data\\.","",names(diamonds))
View(diamonds)
write.csv(diamonds, "./Users/etb8dhv/Desktop/diamonds.csv")
write.csv(diamonds, "./Users/etb8dhv/Desktop/diamonds1.csv")
names(imdb)<-gsub("data\\.","",names(imdb))
write.csv(imdb, "./Users/etb8dhv/Desktop/imdb1.csv")
?diamonds
?movies
names(titanic)<-gsub("data\\.","",names(titanic))
write.csv(titanic, "./Users/etb8dhv/Desktop/titanic.csv")
?titanic
library(ggplot2)
?titanic
?diamonds
?titanic
?data(titanic)
help(titanic)
titanic
activity<-read.csv("activity.csv")
?lattice
vignette("lattice")
library(lattcie)
library(lattice)
?lattice
getwd()
setwd("./Users/etb8dhv/Desktop/Coursera/RepData_PeerAssessment1")
activity<-read.csv("activity.csv")
activity<-read.csv("activity.csv")
View(activity)
xyplot(activity$steps ~ activity$date)
xyplot(steps ~ date, activity)
xyplot(steps ~ date, activity, type="l")
activity$date<-ymd(activity$date)
library(ymd)
library(lubridate)
activity$date<-ymd(activity$date)
a<-melt(activity,measure.vars="steps")
b<-dcast(a, date ~ variable, sum)
library(reshape2)
a<-melt(activity,measure.vars="steps")
b<-dcast(a, date ~ variable, sum)
xyplot(b ~ date, activity, type="l")
xyplot(b ~ date, type="l")
xyplot(b ~ date,type="l")
dotplot(variety ~ yield | site, data = barley, groups = year,
key = simpleKey(levels(barley$year), space = "right"),
xlab = "Barley Yield (bushels/acre) ",
aspect=0.5, layout = c(1,6), ylab=NULL)
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2),
auto.key = list(x = .6, y = .7, corner = c(0, 0)))
?layout.widths
types.plain <- c("p", "l", "o", "r", "g", "s", "S", "h", "a", "smooth")
types.horiz <- c("s", "S", "h", "a", "smooth")
horiz <- rep(c(FALSE, TRUE), c(length(types.plain), length(types.horiz)))
types <- c(types.plain, types.horiz)
x <- sample(seq(-10, 10, length.out = 15), 30, TRUE)
y <- x + 0.25 * (x + 1)^2 + rnorm(length(x), sd = 5)
xyplot(y ~ x | gl(1, length(types)),
xlab = "type",
ylab = list(c("horizontal=TRUE", "horizontal=FALSE"), y = c(1/6, 4/6)),
as.table = TRUE, layout = c(5, 3),
between = list(y = c(0, 1)),
strip = function(...) {
panel.fill(trellis.par.get("strip.background")$col[1])
type <- types[panel.number()]
grid::grid.text(label = sprintf('"%s"', type),
x = 0.5, y = 0.5)
grid::grid.rect()
},
scales = list(alternating = c(0, 2), tck = c(0, 0.7), draw = FALSE),
par.settings =
list(layout.widths = list(strip.left = c(1, 0, 0, 0, 0))),
panel = function(...) {
type <- types[panel.number()]
horizontal <- horiz[panel.number()]
panel.xyplot(...,
type = type,
horizontal = horizontal)
})[rep(1, length(types))]
View(activity)
activity$date<-ymd(activity$date)
a<-melt(activity,measure.vars="steps")
b<-dcast(a, date ~ variable, sum)
qplot(steps, data=b, geom="histogram")
library(ggplot2)
qplot(steps, data=b, geom="histogram")
mean(b$steps,na.rm=TRUE)
median(b$steps,na.rm=TRUE)
c<-dcast(a, interval ~ variable, mean, na.rm=TRUE)
c<-arrange(c, interval)
library(ddplyr)
library(dplyr)
c<-dcast(a, interval ~ variable, mean, na.rm=TRUE)
c<-arrange(c, interval)
View(a)
View(c)
qplot(c$interval,c$steps,geom="line")
c[(c$steps==max(c$steps)),]
sum(!complete.cases(activity))
lookup<-c
f <- activity[(!complete.cases(activity)),]
row.names(f) <- NULL
f2 <- merge(f,lookup,by="interval")
names(f2)[4] <- "steps"
f2 <- arrange(select(f2, steps, date, interval), date, interval)
activity[(!complete.cases(activity)), ] <- f2
a1<-melt(activity, measure.vars="steps")
d1<-dcast(a1, date ~ variable, sum)
qplot(steps, data=d1, geom="histogram")
mean(d1$steps)
median(d1$steps)
wdays <- mutate(a1, weekday = factor(weekdays(date) %in% c("Saturday", "Sunday"), labels=c("weekday", "weekend")))
View(a1)
View(c)
View(wdays)
View(a)
w<-dcast(wdays[(wdays$weekday=="weekday"),], interval ~ variable, mean, na.rm=TRUE)
wend<-dcast(wdays[(wdays$weekday=="weekend"),], interval ~ variable, mean, na.rm=TRUE)
View(w)
View(wend)
?c
mutate(w,group="weekday")
w<-mutate(w,group="weekday")
wend<-mutate(wend,group="weekend")
View(wend)
merge(w,wend,by="group")
merge(w,wend,by="interval")
rbind(w,wend)
View(rbind(w,wend))
View(arrange(rbind(w,wend),interval))
wtest<-arrange(rbind(w,wend),interval)
xyplot(steps ~ interval | group, data = wtest, type="l", xlab = "Five-minute Intervals", aspect=0.75, layout=c(2,1))
